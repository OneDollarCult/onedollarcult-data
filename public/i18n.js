/* public/i18n.js ‚Äî OneDollarCult
   –ï–¥–∏–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å RU/EN –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: index, join, rules, winners, philosophy
   ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å [data-i18n]
   ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É {n} –∏–∑ data-n
   ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç <title data-i18n="...">
   ‚Äî –¥–∞—ë—Ç I18N.lang(), I18N.setLang(), I18N.apply()
   ‚Äî –¥–∏—Å–ø–∞—Ç—á–∏—Ç —Å–æ–±—ã—Ç–∏–µ window 'langchange'
*/
(function (w) {
  const DICT = {
    ru: {
      // –ù–∞–≤–∏–≥–∞—Ü–∏—è
      nav_home: "–ì–ª–∞–≤–Ω–∞—è",
      nav_rules: "–ü—Ä–∞–≤–∏–ª–∞",
      nav_winners: "–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏",
      nav_philosophy: "–§–∏–ª–æ—Å–æ—Ñ–∏—è",
      lang_label: "–Ø–∑—ã–∫",

      // –ì–ª–∞–≤–Ω–∞—è (index)
      title_main: "OneDollarCult",
      slogan: "–û–¥–∏–Ω –¥–æ–ª–ª–∞—Ä. –û–¥–∏–Ω —à–∞–Ω—Å. –û–¥–∏–Ω –ø–æ–±–µ–¥–∏—Ç–µ–ª—å.",
      btn_send1: "–ö–∏–Ω—É—Ç—å $1",
      till_ritual: "‚è≥ –î–æ —Ä–∏—Ç—É–∞–ª–∞:",
      bank_hint: "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç 50% –æ—Ç –±–∞–Ω–∫–∞",
      latest_winner: "üëë –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–∏:",
      latest_wait: "–û–∂–∏–¥–∞–Ω–∏–µ —Ä–∏—Ç—É–∞–ª–∞...",
      players_count: "–í –∏–≥—Ä–µ ‚Äî {n}",
      bank_amount: "–í –±–∞–Ω–∫–µ ‚Äî {n} USDT",

      // Join
      join_title: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî OneDollarCult",
      join_h2: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
      ph_nick: "–ù–∏–∫–Ω–µ–π–º",
      ph_email: "Email",
      btn_go_pay: "–ö–∏–Ω—É—Ç—å $1",
      join_choose_file: "–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª",
      join_no_file: "–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω",
      join_fill_alert: "–ó–∞–ø–æ–ª–Ω–∏ –Ω–∏–∫ –∏ email",

      // Rules
      rules_title: "–ü—Ä–∞–≤–∏–ª–∞ ‚Äî OneDollarCult",
      rules_h1: "–ü—Ä–∞–≤–∏–ª–∞",
      rules_1: "–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–¥–∏–Ω —Ä–∏—Ç—É–∞–ª —Å –æ–¥–Ω–∏–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º.",
      rules_2: "–í—Ö–æ–¥ ‚Äî $1 –≤ USDT (TRC-20). –ü–æ–ª–æ–≤–∏–Ω–∞ –±–∞–Ω–∫–∞ —É—Ö–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—é.",
      rules_3: "–î–æ —Ä–∏—Ç—É–∞–ª–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –≤–∏–¥–µ–Ω —Ç–∞–π–º–µ—Ä. –ü–æ—Å–ª–µ ‚Äî –∏–º—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∏ —Å—É–º–º–∞.",
      rules_4: "–§–∞–∫—Ç —É—á–∞—Å—Ç–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.",
      rules_5: "–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ–¥–µ–ª–∏.",

      // Winners
      winners_title: "–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ ‚Äî OneDollarCult",
      winners_h1: "–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –†–∏—Ç—É–∞–ª–æ–≤",
      total_winners: "–í—Å–µ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π: {n}",
      refresh_btn: "–û–±–Ω–æ–≤–∏—Ç—å",
      col_avatar: "–ê–≤–∞—Ç–∞—Ä",
      col_user: "–£—á–∞—Å—Ç–Ω–∏–∫",
      col_amount: "–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞",
      col_date: "–î–∞—Ç–∞",
      winners_none: "–ï—â—ë –Ω–µ –±—ã–ª–æ —Ä–∏—Ç—É–∞–ª–æ–≤.",

      // Philosophy
      ph_title: "–õ–µ–≥–µ–Ω–¥–∞ –æ –ú–æ–Ω–µ—Ç–µ",
      ph_p1: "–ì–æ–≤–æ—Ä—è—Ç, –∂–∏–ª –º—É–¥—Ä–µ—Ü, –∫–æ—Ç–æ—Ä—ã–π –º–µ—á—Ç–∞–ª –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–º: –æ–¥–Ω–∞–∂–¥—ã –∫–∞–∂–¥—ã–π –∂–∏—Ç–µ–ª—å –ó–µ–º–ª–∏ –æ—Ç–¥–∞—Å—Ç –µ–º—É –ø–æ –æ–¥–Ω–æ–π –º–æ–Ω–µ—Ç–µ. –û–Ω –Ω–µ –∑–Ω–∞–ª, –∑–∞—á–µ–º –µ–º—É —ç—Ç–∏ –º–æ–Ω–µ—Ç—ã ‚Äî –æ–Ω –∑–Ω–∞–ª —Ç–æ–ª—å–∫–æ, —á—Ç–æ –≤ —Ç–æ—Ç –¥–µ–Ω—å –ø–æ–π–º—ë—Ç —Å–º—ã—Å–ª.",
      ph_p2: "–ò –æ–¥–Ω–∞–∂–¥—ã –ë–æ–≥ —É—Å–ª—ã—à–∞–ª –µ–≥–æ. –õ—é–¥–∏ –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞, –Ω–µ —Å–≥–æ–≤–∞—Ä–∏–≤–∞—è—Å—å, –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ –º–æ–Ω–µ—Ç–µ. –ú—É–¥—Ä–µ—Ü —Å—Ç–∞–ª –±–æ–≥–∞—Ç ‚Äî –Ω–µ –∑–æ–ª–æ—Ç–æ–º, –∞ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º –º–∏—Ä–∞.",
      ph_p3: "–¢–æ–≥–¥–∞ –æ–Ω –≤–µ—Ä–Ω—É–ª –ø–æ–ª–æ–≤–∏–Ω—É –æ–±—Ä–∞—Ç–Ω–æ. –ò—Å—Ç–∏–Ω–∞ ‚Äî –Ω–µ –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏, –∞ –≤ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏. –¢–∞–∫ —Ä–æ–¥–∏–ª—Å—è OneDollarCult."
    },

    en: {
      // Navigation
      nav_home: "Home",
      nav_rules: "Rules",
      nav_winners: "Winners",
      nav_philosophy: "Philosophy",
      lang_label: "Language",

      // Index
      title_main: "OneDollarCult",
      slogan: "One dollar. One chance. One winner.",
      btn_send1: "Join for $1",
      till_ritual: "‚è≥ Time until ritual:",
      bank_hint: "Winner gets 50% of the bank",
      latest_winner: "üëë Last week's winner:",
      latest_wait: "Waiting for the ritual...",
      players_count: "Players ‚Äî {n}",
      bank_amount: "Bank ‚Äî {n} USDT",

      // Join
      join_title: "Join ‚Äî OneDollarCult",
      join_h2: "Join",
      ph_nick: "Nickname",
      ph_email: "Email",
      btn_go_pay: "Join for $1",
      join_choose_file: "Choose file",
      join_no_file: "No file chosen",
      join_fill_alert: "Fill nickname and email",

      // Rules
      rules_title: "Rules ‚Äî OneDollarCult",
      rules_h1: "Rules",
      rules_1: "There is one ritual every week with one winner.",
      rules_2: "Entry ‚Äî $1 in USDT (TRC-20). Half of the pool goes to the winner.",
      rules_3: "Before the ritual the timer is shown on the home page. After ‚Äî winner‚Äôs name and amount.",
      rules_4: "Participation is recorded after the transaction confirmation.",
      rules_5: "A randomizer picks the winner among the week‚Äôs participants.",

      // Winners
      winners_title: "Winners ‚Äî OneDollarCult",
      winners_h1: "Ritual Winners",
      total_winners: "Total winners: {n}",
      refresh_btn: "Refresh",
      col_avatar: "Avatar",
      col_user: "Participant",
      col_amount: "Prize amount",
      col_date: "Date",
      winners_none: "No rituals yet.",

      // Philosophy
      ph_title: "The Legend of the Coin",
      ph_p1: "They say there was a sage who dreamed of the impossible: one day every person on Earth would give him a single coin. He didn‚Äôt know why he needed those coins‚Äîonly that on that day he would understand the meaning.",
      ph_p2: "And one day God heard him. People from every country, without collusion, sent a coin. The sage became rich‚Äînot in gold, but in a reflection of the world.",
      ph_p3: "Then he returned half back. Truth lies not in receiving, but in giving. Thus OneDollarCult was born."
    }
  };

  function interpolate(str, n) {
    if (n == null) return str;
    return String(str).replace("{n}", n);
  }

  function apply(lang) {
    const dict = DICT[lang] || DICT.ru;

    // –ü—Ä–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç—ã
    document.querySelectorAll("[data-i18n]").forEach(el => {
      const key = el.getAttribute("data-i18n");
      if (!key) return;
      const n = el.getAttribute("data-n");
      const val = dict[key];
      if (val == null) return;

      const out = interpolate(val, n);
      if (el.tagName.toLowerCase() === "title") {
        document.title = out;               // –¥–ª—è <title data-i18n="...">
      } else if (el.hasAttribute("data-i18n-ph")) {
        // –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ (–µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–º–µ—á–µ–Ω –∏ data-i18n, –∏ data-i18n-ph)
        el.setAttribute("placeholder", out);
      } else {
        el.textContent = out;
      }
    });

    // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã (input[data-i18n-ph])
    document.querySelectorAll("[data-i18n-ph]").forEach(el => {
      const key = el.getAttribute("data-i18n-ph");
      const val = dict[key];
      if (val != null) el.setAttribute("placeholder", val);
    });

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã —è–∑—ã–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    document.querySelectorAll("#langSel").forEach(s => {
      if (s.value !== lang) s.value = lang;
    });
  }

  const I18N = {
    dict: DICT,
    lang() { return w.LANG || "ru"; },
    setLang(lang) {
      try { localStorage.setItem("odc_lang", lang); } catch(e) {}
      w.LANG = lang;
      document.documentElement.lang = lang;
      apply(lang);
      // –°–æ–æ–±—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —á—Ç–æ —è–∑—ã–∫ –ø–æ–º–µ–Ω—è–ª—Å—è (–Ω–∞ —Å–ª—É—á–∞–π –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
      try { window.dispatchEvent(new Event("langchange")); } catch(e) {}
    },
    apply
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  (function initLang() {
    let start = "ru";
    try {
      const saved = localStorage.getItem("odc_lang");
      start = saved || ((navigator.language || "en").toLowerCase().startsWith("ru") ? "ru" : "en");
    } catch(e) {}
    w.LANG = w.LANG || start;
    document.addEventListener("DOMContentLoaded", () => apply(w.LANG));
  })();

  w.I18N = I18N;
})(window);
